
;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 6:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 8:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 18:  (0) r  (1) 0  (2) mr {*mulsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 6
   Insn 43: point = 0, n_alt = 0
  BB 7
   Insn 47: point = 0, n_alt = -1
   Insn 46: point = 0, n_alt = -2
  BB 5
   Insn 42: point = 2, n_alt = -1
   Insn 41: point = 2, n_alt = 0
   Insn 37: point = 4, n_alt = -2
   Insn 34: point = 6, n_alt = 0
   Insn 33: point = 7, n_alt = 0
   Insn 32: point = 7, n_alt = 3
   Insn 31: point = 7, n_alt = -2
   Insn 30: point = 8, n_alt = 4
   Insn 29: point = 9, n_alt = -2
   Insn 28: point = 10, n_alt = 0
  BB 4
   Insn 26: point = 11, n_alt = -1
   Insn 25: point = 11, n_alt = 0
   Insn 23: point = 12, n_alt = 0
  BB 2
   Insn 51: point = 13, n_alt = -1
   Insn 13: point = 13, n_alt = 1
   Insn 12: point = 13, n_alt = 1
   Insn 11: point = 13, n_alt = 0
   Insn 10: point = 13, n_alt = 3
   Insn 9: point = 13, n_alt = -2
   Insn 8: point = 14, n_alt = 4
   Insn 7: point = 15, n_alt = -2
   Insn 6: point = 16, n_alt = 3
   Insn 3: point = 17, n_alt = 0
  BB 3
   Insn 20: point = 19, n_alt = 0
   Insn 19: point = 19, n_alt = 1
   Insn 18: point = 20, n_alt = 2
   Insn 17: point = 22, n_alt = 0
 r82: [11..12]
 r83: [5..6]
 r84: [0..4]
 r85: [15..16]
 r86: [13..14]
 r87: [19..20]
 r88: [21..22]
 r89: [9..10]
 r90: [7..8]
 r92: [17..18]
 r93: [2..3]
Compressing live ranges: from 23 to 20 - 86%
Ranges after the compression:
 r82: [8..9]
 r83: [2..3]
 r84: [0..1]
 r85: [12..13]
 r86: [10..11]
 r87: [16..17]
 r88: [18..19]
 r89: [6..7]
 r90: [4..5]
 r92: [14..15]
 r93: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 23
changing reg in insn 25
changing reg in insn 34
changing reg in insn 37
changing reg in insn 37
changing reg in insn 46
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 18
changing reg in insn 19
changing reg in insn 17
changing reg in insn 18
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 3
changing reg in insn 41
deleting insn with uid = 37.
deleting insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 43.


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={15d,11u} r1={5d} r2={4d} r4={6d,2u} r5={6d,2u} r6={1d,20u} r7={1d,10u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,2u} r18={3d} r19={1d,1u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 289{241d,48u,0e} in 28{25 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.2356+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [92])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":2:11 1159 {stack_protect_set_1_di}
     (nil))
(insn 6 3 7 2 (parallel [
            (set (reg:DI 0 ax [85])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":4:5 210 {*adddi_1}
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [85])) "main.c":4:5 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 0 ax [86])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f851798c240 *.LC0>)) "main.c":4:5 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":4:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f851798c240 *.LC0>)
        (nil)))
(insn 10 9 11 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":4:5 77 {*movqi_internal}
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f85178a2d00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":4:5 824 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
        (const_int 2 [0x2])) "main.c":5:6 75 {*movsi_internal}
     (nil))
(insn 13 12 51 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [2 f+0 S4 A32])
        (const_int 1 [0x1])) "main.c":6:6 75 {*movsi_internal}
     (nil))
(jump_insn 51 13 52 2 (set (pc)
        (label_ref 21)) "main.c":7:10 807 {jump}
     (nil)
 -> 21)
(barrier 52 51 24)
(code_label 24 52 16 3 3 (nil) [1 uses])
(note 16 24 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:SI 0 ax [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [2 f+0 S4 A32])) "main.c":8:10 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg:SI 0 ax [87])
                (mult:SI (reg:SI 0 ax [88])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":8:10 408 {*mulsi3_1}
     (nil))
(insn 19 18 20 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [2 f+0 S4 A32])
        (reg:SI 0 ax [87])) "main.c":8:10 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":9:10 209 {*addsi_1}
     (nil))
(code_label 21 20 22 4 2 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 25 4 (set (reg:SI 0 ax [orig:82 n.0_1 ] [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])) "main.c":7:12 75 {*movsi_internal}
     (nil))
(insn 25 23 26 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
            (reg:SI 0 ax [orig:82 n.0_1 ] [82]))) "main.c":7:12 11 {*cmpsi_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "main.c":7:12 806 {*jcc}
     (nil)
 -> 24)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:SI 0 ax [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [2 f+0 S4 A32])) "main.c":11:5 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [89])) "main.c":11:5 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 0 ax [90])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f851798c2d0 *.LC1>)) "main.c":11:5 74 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":11:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f851798c2d0 *.LC1>)
        (nil)))
(insn 32 31 33 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":11:5 77 {*movqi_internal}
     (nil))
(call_insn 33 32 34 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f85178a2100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":11:5 824 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 34 33 41 5 (set (reg:SI 0 ax [orig:83 _10 ] [83])
        (const_int 0 [0])) "<built-in>":0:0 75 {*movsi_internal}
     (nil))
(insn 41 34 42 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.2356+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 1 dx [93]))
        ]) "main.c":12:1 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 42 41 49 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "main.c":12:1 806 {*jcc}
     (nil)
 -> 45)
(note 49 42 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 43 49 44 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f851798f400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":12:1 813 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 44 43 45)
(code_label 45 44 50 7 5 (nil) [1 uses])
(note 50 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 50 53 7 (use (reg/i:SI 0 ax)) "main.c":12:1 -1
     (nil))
(note 53 47 0 NOTE_INSN_DELETED)
